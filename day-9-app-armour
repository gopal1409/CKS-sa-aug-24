 105  aa-status
  106  apt-get install apparmor-utils
  107  aa-
  108  aa-status
   110  curl  killer.sh -v
   ##this will create a profile and apply the enforce rule 
  109  aa-genprof curl
  110  curl  killer.sh -v
   ##if you want to check the profile
  111  aa-status
  ##the profile information is stored in the particular directory with file name
  115  cd apparmor.d/
  116  ls
  117  vi usr.bin.curl
  118  aa-logprof
  119  vi usr.bin.curl

###lets create a pod and add the app armour profile
 839  kubectl run secure --image=nginx -o yaml --dry-run=client > pod.yml
###add the security context block in the app armour profile
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: secure
  name: secure
spec:
  securityContext:
    appArmorProfile:
      type: Localhost
      localhostProfile: k8s-apparmor-example-deny-write
  containers:
  - image: nginx
    name: secure
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
##apply the container
  841  kubectl -f pod.yml create
##once applied describe it see the profile exist or not
  848  kubectl describe pod secure
##this will show that the profile do not exist

##this activity need to be done on the worker node where the worked is there
cd /etc/apparmor.d/
##go inside the directory create a file and add a policy
 122  vi k8s-apparmor-example-deny-write
#####################
#include <tunables/global>

profile k8s-apparmor-example-deny-write flags=(attach_disconnected) {
  #include <abstractions/base>

  file,

  # Deny all file writes.
  deny /** w,
}
####once i add the policy i need to load it inside app armour
 124  apparmor_parser /etc/apparmor.d/k8s-apparmor-example-deny-write
#####below command will show that the policy is being loaded or not
  125  aa-status
#############do this in master machine
 855  kubectl get pod
###describe command will show that the pod cannot write so it is failing
  856  kubectl describe pod secure


###lets access the node metadata
  250  apt install jq
  251  curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01" | jq
  ###login inside the pod 
 255  kubectl get pod
  256  kubectl exec -it pod1 bash
####after login install 
apt-get update
apt install jq
###now if i run the same curl command
curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01" | jq
###from inside the pod we can see the metadata of our whole instance
##lets create a networkpolicy which will disable all the metadata access from a pod
#####lets create a policy which will disable metadata access in a particular namespace
261  vi cloud-metadata-deny.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cloud-metadata-deny
  namespace: default
spec:
  podSelector: {}

  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 169.254.169.254/32
  262  kubectl apply -f cloud-metadata-deny.yml
  263  kubectl get networkpolicy
  264  kubectl describe networkpolicy cloud-metadata-deny
  265  kubectl get pod
  266  kubectl exec -it pod1 bash
##check using the curl command
curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01" | jq
####next we will create an exeption where we define that a pod with particular namespace will allow access to metadata
vi cloud-metadata-allow.yml
####add this policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cloud-metadata-allow
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: metadata-accessor #the pod should have this label
  
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 169.254.169.254/32 #and inside the policy we need to allow this ip address
####################################################
 271  kubectl apply -f cloud-metadata-allow.yml
  272  kubectl get networkpolicy
288  kubectl run nginx --image=nginx
  289  kubectl label pod nginx role=metadata-accessor
###this will show two labels or the exeption label
  290  kubectl get pod nginx --show-labels
  291  kubectl exec -it nginx bash
###once you login run this command
curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2021-02-01" 
##this will give you the output due to exception or allow policy
exit

        

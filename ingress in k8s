##lets first install the ingress
162  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.2/deploy/static/provider/cloud/deploy.yaml
##lets delete the ingress
kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.2/deploy/static/provider/cloud/deploy.yaml
##lets create a new ingress with new version
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.6.4/deploy/static/provider/cloud/deploy.yaml
  163  kubectl -n ingress-nginx get pod,svc
##now we will create two pod and expose them using clusterip
189  kubectl run pod1 --image=nginx

  191  kubectl run pod2 --image=httpd
  192  kubectl expose pod pod1 --port 80 --name service1
  193  kubectl expose pod pod2 --port 80 --name service2
  194  kubectl get svc
##get svc will show that both the pod is running as clusterip internal to your k8s cluster
 197  kubectl get ingressclass
  198  vi ingresss1.yml
###check the ingress class and change the name
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx #we need to change the class name
  rules:
  - http:
      paths:
      - path: /service1
        pathType: Prefix
        backend:
          service:
            name: service1
            port:
              number: 80 #the port number under which your application 
      - path: /service2
        pathType: Prefix
        backend:
          service:
            name: service2
            port:
              number: 80 #the port number under which your application
######################################
 199  kubectl apply -f ingresss1.yml
  200  kubectl get ingress
#3this describe command will show that ingress is pointing to your pod 
  202  kubectl describe ingress minimal-ingress
  203  kubectl get pod
  204  kubectl get pod -o wide
##ingress tls certificate check
211  kubectl get svc -A
##this will show the poort number for ssl i.e 443
##change teh ip to your worker node 
 217  curl https://20.15.201.98:31287 -kv
##lets create a fake certificate
root@docker:~# openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes
Generating a RSA private key
.......++++
.......++++
writing new private key to 'key.pem'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:
State or Province Name (full name) [Some-State]:
Locality Name (eg, city) []:
Organization Name (eg, company) [Internet Widgits Pty Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:secure-ingress.com 

